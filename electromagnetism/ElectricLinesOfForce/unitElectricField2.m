function [i,j,k] = unitElectricField2( a,b,c,x,y,z )
%unitElectricField2 点A1と点A2が点Pに作る電場ベクトルを求める。但し大きさは1になるように強制的に拡大縮小する
%   点A1(a(1),b(1),c(1))、点A2(a(2),b(2),c(2))、点P(x,y,z)
%   bとcは長さ2のベクトル、aは長さ4のベクトルである必要がある。
%   a(3)は点A1の電荷の符号を意味する。+なら1を、-なら-1を格納すること。
%   a(4)は点A2の電荷の符号を意味する。+なら1を、-なら-1を格納すること。

%E1
%=EA1の4πε/Q倍
%=(((x-a(1))^2+(y-b(1))^2+(z-c(1))^2)^-1.5)(x-a(1),y-b(1),z-c(1))
%=scalar1*(x-a(1),y-b(1),z-c(1))
scalar1=(((x-a(1))^2+(y-b(1))^2+(z-c(1))^2)^-1.5);
E1=[scalar1*(x-a(1)),scalar1*(y-b(1)),scalar1*(z-c(1))];

%E2
%=EA2の4πε/Q倍
%=((x-a(2))^2+(y-b(2))^2+(z-c(2))^2)^-1.5)
%=scalar2*(x-a(2),y-b(2),z-c(2))
scalar2=(((x-a(2))^2+(y-b(2))^2+(z-c(2))^2)^-1.5);
E2=[scalar2*(x-a(2)),scalar2*(y-b(2)),scalar2*(z-c(2))];

if ((a(3))^2~=1)||((a(4))^2~=1)
 fprintf("unitElectricField2関数の実行中にエラー。unitElectricField2関数の説明をよく読むこと。\n")
 i=NaN;
 j=0;
 k=0;
 return
end

%E
%合成電場ベクトル
E=a(3)*E1+a(4)*E2;

%Eの大きさ
absOfE=( (E(1))^2 +(E(2))^2 +(E(3))^2 )^0.5;

%Eを単位ベクトルにする
E=E/absOfE;

%電場ベクトルが電荷とぶつかるかどうか
%=電場ベクトルの成分比と、任意の電荷の座標(l,m,n)と今の座標(x,y,z)との間の位置関係の成分比が一致(誤差率r以内)し、かつ前者のほうが大きい
r=0.001;
for p=[1:2]
    l=a(p);
    m=b(p);
    n=c(p);
    if ((l-x)/(m-y)-E(1)/E(2))/(E(1)/E(2))<r
    %x,y比が一致する場合
        if ((m-y)/(n-z)-E(2)/E(3))/(E(2)/E(3))<r
        %y,z比が一致する場合
            if ((l-x)/(n-z)-E(1)/E(3))/(E(1)/E(3))<r
            %x,z比が一致する場合
                if (l-x)<E(1)
                %電場ベクトルのほうが大きい場合
                    %電場ベクトルと電荷がぶつかるといえる
                    i=NaN;
                    j=0;
                    k=0;
                    return
                end
            end
        end
    end
    
end

i=E(1);
j=E(2);
k=E(3);

end

